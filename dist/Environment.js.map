{"version":3,"sources":["Environment.js"],"names":["_ConsoleHelper","_interopRequireDefault","require","_ErrorHelper","_TypeHelper","_JsonHelper","Environment","ex","isDebug","ConsoleHelper","error","message","stack","ErrorHelper","__printException","no","data","s_data","logInfo","loggerLevel","isException","TypeHelper","isType","Error","url","window","location","href","isString","value","additionData","key","isError","hasOwnProperty","s_globalErrorCallback","globalErrorCallback","tierFadeTime"],"mappings":"2FAAA,IAAAA,eAAAC,uBAAAC,QAAA,oBACAC,aAAAF,uBAAAC,QAAA,kBACAE,YAAAH,uBAAAC,QAAA,iBACAG,YAAAJ,uBAAAC,QAAA,meAHAI,oIAQiCC,GAPjCD,EAAAE,QACAC,eAAAA,QAAAC,MAAA,CAAAC,QAAAJ,EAAAI,QAAAC,MAAAC,aAAAA,QAAAC,iBAAAP,KAaYE,eAAAA,QAAcC,MAAM,oBAAsBH,EAAGQ,GAAK,QAAUR,EAAGQ,GAAK,wCAO1DC,GAlBtBV,EAAAW,OAAAD,mCAmBoBC,EAAZC,GACH,GAAAZ,EAAAa,aAAAA,GACDD,EAAA,CAiCY,IAAIF,EAAO,CACPI,YAAaC,YAAAA,QAAWC,OAAOJ,EAASK,OACxCJ,YAAAA,EACAK,IAAKC,OAAOC,SAASC,MAEzB,GAAIN,YAAAA,QAAWO,SAASV,GACpBF,EAAKL,QAAUO,MAEd,CACD,IAAuBW,EAAnBC,EAAe,GAV3B,IAAa,IAAAC,KAWDV,YAAAA,QAAWW,QAAQd,KACnBY,EAAY,QAAcZ,EAAQP,QAClCmB,EAfJX,MAAaD,EAASN,OAEjBM,EACEA,EAAAe,eAAAF,KAAA,iBACMV,EAAAA,EAAAA,MAERQ,EAAgBF,YAAAA,QAAAA,OAAAA,IAiBbG,EAAaC,GAAOF,GAZ3Bb,EAAAc,aAAAA,uDAQOD,EAAAA,oBAAAvB,EAAA4B,6DAIAJ,GACHxB,EAAA6B,qBACJ7B,EAAA6B,oBAAA5B,wCAlDb,OAAOD,EAAYW,OAAOmB,6CArB1B,OAAI9B,EAAYE,OAASA,4CAAzB,OAIKF,EAAAW,OAAAE,6CAmCL,OAAOb,EAAYW,OAAOS,gDAoClBT,OAAA,CAqBZmB,aAAc,IApBL5B,SAAA,EACJW,YAAA,EACJO,SAAA,SA4BLpB,YAAY6B,oBAAsB7B,YAAY4B","file":"Environment.js","sourcesContent":["import ConsoleHelper from \"./ConsoleHelper\";\nimport ErrorHelper from \"./ErrorHelper\";\nimport TypeHelper from \"./TypeHelper\";\nimport JsonHelper from \"./JsonHelper\";\n/**\n * 环境对象\n */\nexport default class Environment {\n    static s_globalErrorCallback(ex) {\n        if (Environment.isDebug) {\n            // UI.Dialogs.error(ex.message, ErrorHelper.__printException(ex));\n            ConsoleHelper.error({ message: ex.message, stack: ErrorHelper.__printException(ex) });\n        }\n        else {\n            // UI.Dialogs.error(\"当前操作失败，请联系系统管理员。\" + (ex.no ? \"操作编号：\" + ex.no : \"\"));\n            ConsoleHelper.error(\"当前操作失败，请联系系统管理员。\" + (ex.no ? \"操作编号：\" + ex.no : \"\"));\n        }\n    }\n    /**\n     * 初始化，由平台统一调用\n     * @param data 初始数据\n     */\n    static initialize(data) {\n        Environment.s_data = data;\n    }\n    /**\n     * 弹出层淡出淡入时间\n     * @returns\n     */\n    static get tierFadeTime() {\n        return Environment.s_data.tierFadeTime;\n    }\n    /**\n     * 当前是否为调试模式\n     */\n    static get isDebug() {\n        return Environment.s_data.isDebug;\n    }\n    /**\n     * 获取写日志的级别\n     */\n    static get loggerLevel() {\n        return Environment.s_data.loggerLevel;\n    }\n    /**\n     * 获取当前显示的本地化信息\n     */\n    static get location() {\n        return Environment.s_data.location;\n    }\n    /**\n     * 写日志\n     * @param loggerLevel 日志级别\n     * @param logInfo 日志信息\n     */\n    static writeLog(loggerLevel, logInfo) {\n        if (loggerLevel >= Environment.loggerLevel) {\n            if (logInfo) {\n                let data = {\n                    isException: TypeHelper.isType(logInfo, Error),\n                    loggerLevel,\n                    url: window.location.href\n                };\n                if (TypeHelper.isString(logInfo)) {\n                    data.message = logInfo;\n                }\n                else {\n                    let additionData = {}, value;\n                    if (TypeHelper.isError(logInfo)) {\n                        additionData[\"message\"] = logInfo.message;\n                        additionData[\"stack\"] = logInfo.stack;\n                    }\n                    for (const key in logInfo) {\n                        if (logInfo.hasOwnProperty(key)) {\n                            value = logInfo[key];\n                            if (typeof value !== \"string\") {\n                                value = JsonHelper.toJson(value);\n                            }\n                            additionData[key] = value;\n                        }\n                    }\n                    data.additionData = additionData;\n                }\n                // 调用服务写日志\n                // ServiceHelper.service({ type: \"common\", name: \"log\", params: { data: data } });\n            }\n        }\n    }\n    /**\n     * 复位全局异常处理\n     */\n    static resetGlobalErrorCallback() {\n        Environment.globalErrorCallback = Environment.s_globalErrorCallback;\n    }\n    /**\n     * 处理捕获到的全局异常\n     * @param ex 异常对象\n     */\n    static __processError(ex) {\n        if (Environment.globalErrorCallback) {\n            Environment.globalErrorCallback(ex);\n        }\n    }\n}\nEnvironment.s_data = {\n    tierFadeTime: 200,\n    isDebug: false,\n    loggerLevel: 6,\n    location: \"zh-cn\"\n};\n/**\n * 指定自定义的全局异常回调处理\n * @param {type} ex\n * @returns\n */\nEnvironment.globalErrorCallback = Environment.s_globalErrorCallback;\n"]}