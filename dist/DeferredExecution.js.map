{"version":3,"sources":["DeferredExecution.js"],"names":["DeferredExecution","callback","options","_this","this","_timeoutHandle","clearTimeout","setTimeout","context","call","data","timeout"],"mappings":"qeAGqBA,uHAMTC,EAAUC,GAAS,IAAAC,EAAAC,KACnBA,KAAKC,gBACLC,aAAaF,KAAKC,gBAX9BD,KAAAC,eAAAE,WAAA,WAcY,GAAIL,GACIA,EAAQM,QAGR,OAfCR,EAaQS,KAAKP,EAAQM,QAASN,EAAQQ,WACvCP,EAAKE,eAAiB,GAI9BJ,KACDC,GAAWA,EAAQS,SAA6B,EAAlBT,EAAQS,QAAcT,EAAQS,QAAU,mCAGrEP,KAAKC,gBArBbC,aAAAF,KAAAC","file":"DeferredExecution.js","sourcesContent":["/**\n * 延迟执行辅助对象\n */\nexport default class DeferredExecution {\n    /**\n     * 执行一个延迟执行回调，如果上一次回调还没有执行，则会先取消上次回调\n     * @param callback 回调函数，默认为延迟0\n     * @param options 延迟选项\n     */\n    execute(callback, options) {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n        }\n        this._timeoutHandle = setTimeout(() => {\n            if (options) {\n                if (options.context) {\n                    callback.call(options.context, options.data);\n                    this._timeoutHandle = 0;\n                    return;\n                }\n            }\n            callback();\n        }, options && options.timeout && options.timeout > 0 ? options.timeout : 0);\n    }\n    cancl() {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n        }\n    }\n}\n"]}