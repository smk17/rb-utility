{"version":3,"sources":["JsonHelper.js"],"names":["JsonHelper","toJson","data","toJSON","JSON","stringify","console","log","error","json","parse","value","paramsValueConvertToString","paramValues","paramValueToString","hasOwnProperty","key"],"mappings":"2FAIA,IAAIA,WAA4B,WAC5B,SAASA,KAsET,OAvEaA,EAAAC,OAAA,SAAAC,GAAe,GAAYA,MAAAA,EAC/BF,MAAAA,OAWL,GAAIE,EAAKC,OACL,OAAOD,EAAKC,SAEhB,IACI,OAAOC,KAAKC,UAAUH,GAR9BF,MAAWC,GAEH,OADIK,QAAKC,IAATC,GACA,KAMAR,EAAOI,UAAA,SAAPK,GAEJ,GAAAA,GAAc,SAAAA,GAAA,cAAAA,EACVH,IACA,OAAAF,KAAAM,MAAAD,GAZR,MAAAD,GA2BY,OAZZF,QAAAE,MAAAA,EAAAC,GAYmB,GAGf,OAAO,MAPCT,EAAOI,mBAAP,SAAAO,GAEJ,MAAc,iBAAPH,EACKA,EAEXR,EAAAC,OAAAU,IAkBTX,EAAWY,2BAA6B,SAAUC,GAI9C,IAAIF,EAHJ,GAAKE,EAXTb,IAAWc,IAAAA,KAAAA,EACIH,EAAUI,eAAUC,KAE9BL,OADUA,EAAPE,EAAAG,WAiBeH,EAAYG,GAnBnC,iBAAAL,IAMAE,EAAAG,GAAAhB,EAAAC,OAAAU,MAqBOX,EAvEqB,YAuDnBa","file":"JsonHelper.js","sourcesContent":["/**\n * Json辅助工具\n * @returns\n */\nvar JsonHelper = /** @class */ (function () {\n    function JsonHelper() {\n    }\n    /**\n     * 将对象序列化成json字符串\n     * @param {any} data 需要进行序列化的对象\n     * @returns 返回序列化后的json字符串\n     */\n    JsonHelper.toJson = function (data) {\n        if (data === null || data === undefined) {\n            return \"null\";\n        }\n        if (data.toJSON) {\n            return data.toJSON();\n        }\n        try {\n            return JSON.stringify(data);\n        }\n        catch (error) {\n            console.log(error);\n            return \"\";\n        }\n    };\n    /**\n     * 将json字符串反序列化成对象\n     * @param {string} json json字符串\n     * @returns 返回对应的对象\n     */\n    JsonHelper.parseJson = function (json) {\n        if (json && json !== \"null\" && json !== \"undefined\") {\n            try {\n                return JSON.parse(json);\n            }\n            catch (error) {\n                console.error(error, json);\n                return {};\n            }\n        }\n        return null;\n    };\n    /**\n     * 将参数值转换到字符串形式\n     * @param value 参数的原始值\n     */\n    JsonHelper.paramValueToString = function (value) {\n        if (typeof value === \"string\") {\n            return value;\n        }\n        return JsonHelper.toJson(value);\n    };\n    /**\n     * 将参数值转换到字符串形式\n     * @param value 参数的原始值\n     */\n    JsonHelper.paramsValueConvertToString = function (paramValues) {\n        if (!paramValues) {\n            return;\n        }\n        var value;\n        for (var key in paramValues) {\n            if (paramValues.hasOwnProperty(key)) {\n                value = paramValues[key];\n                if (value === null || value === undefined) {\n                    delete paramValues[key];\n                }\n                else if (typeof value !== \"string\") {\n                    paramValues[key] = JsonHelper.toJson(value);\n                }\n            }\n        }\n    };\n    return JsonHelper;\n}());\nexport default JsonHelper;\n"]}