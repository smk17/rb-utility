{"version":3,"sources":["ServiceHelper.js"],"names":["reject","_moment","_interopRequireDefault","require","_IUtilityTypes","_JsonHelper","_ConsoleHelper","result","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","fulfilled","value","step","next","e","rejected","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","ServiceHelper","error","_dispose","ex","rejct","name","errorType","ErrorType","business","type","datas","referencedDatas","success","message","join","search","data","status","_executeService","host","service","_this","formData","isFormData","handlingErrorLevel","key","_c","_d","ex_1","headers","_e","ServiceErrorLevelEnum","allError","params","FormData","_b","_a","_i","hasOwnProperty","_toParamString","fail","ConsoleHelper","warn","Headers","Content-Type","Accept","race","fetch","method","cache","credentials","setTimeout","TIMEOUT","response","text","Error","statusText","res","JsonHelper","parseJson","development","log","catch","writeLog","toJson","executeService","ServiceType","Get","reloading","RELOADCOUNT","execute","EventDriver","send","err","val","toString","format","Blob","fileName","_typeof"],"mappings":"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","file":"ServiceHelper.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\n// import Axios from \"axios\";\nimport \"whatwg-fetch\";\nimport moment from \"moment\";\nimport { ServiceErrorLevelEnum, ServiceType, ErrorType } from \"./IUtilityTypes\";\nimport JsonHelper from \"./JsonHelper\";\nimport ConsoleHelper from \"./ConsoleHelper\";\nimport EventDriver from \"./EventDriver\";\nvar ServiceHelper = /** @class */ (function () {\n    function ServiceHelper() {\n    }\n    /**\n     * 异常处理.如果是 `UserException` 异常,则会直接弹出异常信息;否则会写入异常日志,并弹出 `操作失败，请关闭重试！`\n     * @param ex 异常对象\n     */\n    ServiceHelper._dispose = function (ex, rejct) {\n        if (!ex)\n            return;\n        switch (ex.name) {\n            case \"PassException\":\n                return;\n            case \"BusinessException\":\n                ex.errorType = ErrorType.business;\n                switch (ex.type) {\n                    case \"ReferencedDataException\":\n                        {\n                            var datas = ex.referencedDatas;\n                            if (datas.length > 5) {\n                                datas[5] = \"等\";\n                            }\n                            ex.success = false;\n                            ex.message = \"被使用的数据：\" + datas.join(\"，\") + ex.message;\n                            if (rejct)\n                                rejct(ex);\n                        }\n                        break;\n                    default:\n                        ex.success = false;\n                        if (rejct)\n                            rejct(ex);\n                        break;\n                }\n                break;\n            case \"RightsException\":\n            case \"SystemException\":\n            case \"AuthorizationException\":\n            case \"ClientDisposeException\":\n            case \"OpenDBConnectionException\":\n                ex.success = false;\n                if (rejct)\n                    rejct(ex);\n                break;\n            default:\n                var message = ex + \"\";\n                if (message.search(\"Network request failed\")) {\n                    var data = {\n                        // success: false,\n                        name: \"RequestServiceException\",\n                        status: 704,\n                        message: \"网络请求失败，错误码：704\"\n                    };\n                    if (rejct)\n                        rejct(data);\n                }\n                else {\n                    var data = {\n                        success: false,\n                        message: message\n                    };\n                    if (rejct)\n                        rejct(data);\n                }\n                break;\n        }\n    };\n    /**\n     * 执行指定的服务\n     * @param service 要执行的服务\n     */\n    // private static __executeService<T>(host: string, service: IServiceInfo) {\n    //   return new Promise<T>(async (resolve, rejct) => {\n    //     const { name } = service;\n    //     const handlingErrorLevel =\n    //       service.handlingErrorLevel || ServiceErrorLevelEnum.allError;\n    //     let formData: string = \"\",\n    //       error: Error;\n    //     if (service.params) {\n    //       try {\n    //         formData = \"\";\n    //         for (const key in service.params) {\n    //           if (service.params.hasOwnProperty(key)) {\n    //             if (formData) {\n    //               formData += \"&\";\n    //             }\n    //             formData +=\n    //               key + \"=\" + (await ServiceHelper._toParamString(service.params[key]));\n    //           }\n    //         }\n    //       } catch (ex) {\n    //         rejct({\n    //           type: \"FormatError\",\n    //           name: \"参数格式化出错，请检查参数格式\",\n    //           message: ex\n    //         });\n    //       }\n    //     }\n    //     const response = await Axios.post(host + name, formData, {\n    //       headers: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\",\n    //         Accept: \"application/json\"\n    //       },\n    //       timeout: ServiceHelper.TIMEOUT\n    //     });\n    //     if (response) {\n    //       if (response.status >= 200 && response.status < 300) {\n    //         const { data } = response;\n    //         let ex = data.e;\n    //         if (ex) {\n    //           if (ex.name === \"BusinessException\") {\n    //             if (handlingErrorLevel >= ServiceErrorLevelEnum.allError) {\n    //               ServiceHelper._dispose(ex, rejct);\n    //             }\n    //           } else if (handlingErrorLevel >= ServiceErrorLevelEnum.allError) {\n    //             ServiceHelper._dispose(ex, rejct);\n    //           }\n    //           rejct(ex);\n    //         } else {\n    //           const result = data;\n    //           // result.data 有可能为null\n    //           if (result.data) {\n    //             if (result.data.success === false) {\n    //               rejct(result.data);\n    //             } else {\n    //               resolve(result.data);\n    //             }\n    //           } else {\n    //             ConsoleHelper.error(service.name, \"获取数据为null\");\n    //             resolve(undefined);\n    //           }\n    //         }\n    //       } else {\n    //         error = new Error(response.statusText);\n    //         error.name = \"RequestServiceException\";\n    //         error[\"status\"] = response.status;\n    //         ServiceHelper._dispose(error, rejct);\n    //       }\n    //     } else {\n    //       error = new Error(\"response is null\");\n    //       error.name = \"RequestNullException\";\n    //       ServiceHelper._dispose(error, rejct);\n    //     }\n    //   });\n    // }\n    /**\n     * 执行指定的服务\n     * @param service 要执行的服务\n     */\n    ServiceHelper._executeService = function (host, service) {\n        var _this = this;\n        return new Promise(function (resolve, rejct) { return __awaiter(_this, void 0, void 0, function () {\n            var formData, isFormData, handlingErrorLevel, _a, _b, _i, key, _c, _d, ex_1, headers;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        isFormData = false;\n                        handlingErrorLevel = service.handlingErrorLevel || ServiceErrorLevelEnum.allError;\n                        if (!service.params) return [3 /*break*/, 7];\n                        if (!(service.params instanceof FormData)) return [3 /*break*/, 1];\n                        formData = service.params;\n                        isFormData = true;\n                        return [3 /*break*/, 7];\n                    case 1:\n                        _e.trys.push([1, 6, , 7]);\n                        formData = \"\";\n                        _a = [];\n                        for (_b in service.params)\n                            _a.push(_b);\n                        _i = 0;\n                        _e.label = 2;\n                    case 2:\n                        if (!(_i < _a.length)) return [3 /*break*/, 5];\n                        key = _a[_i];\n                        if (!service.params.hasOwnProperty(key)) return [3 /*break*/, 4];\n                        if (formData) {\n                            formData += \"&\";\n                        }\n                        _c = formData;\n                        _d = key +\n                            \"=\";\n                        return [4 /*yield*/, ServiceHelper._toParamString(service.params[key])];\n                    case 3:\n                        formData = _c + (_d +\n                            (_e.sent()));\n                        _e.label = 4;\n                    case 4:\n                        _i++;\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 7];\n                    case 6:\n                        ex_1 = _e.sent();\n                        if (handlingErrorLevel >= ServiceErrorLevelEnum.fail) {\n                            ConsoleHelper.warn(\"FormatError\");\n                            ServiceHelper._dispose(ex_1, rejct);\n                            ConsoleHelper.error(\"FormData format error: \" + ex_1);\n                        }\n                        else {\n                            rejct({\n                                type: \"FormatError\",\n                                name: \"参数格式化出错，请检查参数格式\",\n                                message: ex_1\n                            });\n                        }\n                        return [3 /*break*/, 7];\n                    case 7:\n                        headers = new Headers({\n                            \"Content-Type\": \"application/x-www-form-urlencoded\",\n                            Accept: \"application/json\"\n                        });\n                        if (!isFormData) {\n                            headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n                        }\n                        Promise.race([\n                            fetch(host + service.name, {\n                                method: \"POST\",\n                                cache: \"no-cache\",\n                                credentials: \"include\",\n                                headers: headers,\n                                body: formData\n                            }),\n                            new Promise(function (_, reject) {\n                                setTimeout(function () {\n                                    var result = {\n                                        data: {\n                                            success: false,\n                                            message: \"网络请求超时啦～\"\n                                        }\n                                    };\n                                    reject(result.data);\n                                }, ServiceHelper.TIMEOUT);\n                            })\n                        ])\n                            .then(function (response) {\n                            // response 有可能为null\n                            var error;\n                            if (response) {\n                                if (response.status >= 200 && response.status < 300) {\n                                    return response.text();\n                                }\n                                else {\n                                    error = new Error(response.statusText);\n                                    error.name = \"RequestServiceException\";\n                                    error[\"status\"] = response.status;\n                                    throw error;\n                                }\n                            }\n                            else {\n                                error = new Error(\"response is null\");\n                                error.name = \"RequestNullException\";\n                                throw error;\n                            }\n                        })\n                            .then(function (res) {\n                            var result = JsonHelper.parseJson(res);\n                            if (ServiceHelper.development)\n                                ConsoleHelper.log(result);\n                            if (service.name === \"/anonymity/writelog\") {\n                                return;\n                            }\n                            var ex = result.e;\n                            if (ex) {\n                                if (ex.name === \"BusinessException\") {\n                                    if (handlingErrorLevel >= ServiceErrorLevelEnum.allError) {\n                                        ServiceHelper._dispose(ex, rejct);\n                                    }\n                                }\n                                else if (handlingErrorLevel >= ServiceErrorLevelEnum.allError) {\n                                    ServiceHelper._dispose(ex, rejct);\n                                }\n                                rejct(ex);\n                            }\n                            else {\n                                // result.data 有可能为null\n                                if (result.data) {\n                                    if (result.data.success === false) {\n                                        rejct(result.data);\n                                    }\n                                    else {\n                                        resolve(result.data);\n                                    }\n                                }\n                                else {\n                                    ConsoleHelper.error(service.name, \"获取数据为null\");\n                                    resolve(undefined);\n                                }\n                            }\n                        })\n                            .catch(function (ex) {\n                            if (service.name === \"/anonymity/writelog\") {\n                                return;\n                            }\n                            if (handlingErrorLevel >= ServiceErrorLevelEnum.fail) {\n                                ServiceHelper._dispose(ex, rejct);\n                            }\n                            else {\n                                rejct(ex);\n                            }\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * 写日志\n     * 把日志数据上传到服务器\n     * @param data 日志数据\n     */\n    ServiceHelper.writeLog = function (data) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                // 把日志数据上传到服务器\n                ConsoleHelper.log(JsonHelper.toJson(data), \"@dy/service/ServiceHelper.ts:239\");\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * 执行指定的服务\n     * @param service 要执行的服务\n     * @param type 服务的类型\n     */\n    ServiceHelper.executeService = function (host, service, type) {\n        if (type === void 0) { type = ServiceType.Get; }\n        return new Promise(function (resolve, rejct) {\n            var reloading = ServiceHelper.RELOADCOUNT;\n            var execute = function () {\n                ServiceHelper._executeService(host, service)\n                    .then(function (res) {\n                    resolve(res);\n                    if (type === ServiceType.Get)\n                        EventDriver.send(\"networkError\", false, function () { });\n                })\n                    .catch(function (err) {\n                    if (err.success === false) {\n                        rejct(err);\n                        return;\n                    }\n                    if (ServiceHelper.development) {\n                        rejct(err);\n                        return;\n                    }\n                    if (err.name === \"RequestServiceException\") {\n                        if (err.status === 408 ||\n                            err.status === 503 ||\n                            err.status === 504 ||\n                            err.status === 704) {\n                            if (reloading > 0) {\n                                ConsoleHelper.log(\"数据请求失败，重新请求，请求计数：\" + reloading, \"@dy/service/ServiceHelper.ts:273\");\n                                execute();\n                                reloading--;\n                            }\n                            else {\n                                if (type === ServiceType.Get)\n                                    EventDriver.send(\"networkError\", true, execute);\n                                rejct(err);\n                            }\n                        }\n                        else\n                            rejct(err);\n                    }\n                    else\n                        rejct(err);\n                });\n            };\n            execute();\n        });\n    };\n    /** 数据请求失败时重新请求的次数 */\n    ServiceHelper.RELOADCOUNT = 5;\n    /** 数据超时时间 */\n    ServiceHelper.TIMEOUT = 30000;\n    ServiceHelper.development = false;\n    ServiceHelper._toParamString = function (val) { return __awaiter(_this, void 0, void 0, function () {\n        var key;\n        return __generator(this, function (_a) {\n            if (val === null || val === undefined) {\n                return [2 /*return*/, null];\n            }\n            switch (typeof val) {\n                case \"string\":\n                    return [2 /*return*/, val];\n                case \"boolean\":\n                    return [2 /*return*/, val ? \"true\" : \"false\"];\n                case \"number\":\n                    return [2 /*return*/, val.toString()];\n                default:\n                    if (moment.isDate(val)) {\n                        return [2 /*return*/, moment(val).format(\"yyyy-MM-dd HH:mm:ss\")];\n                    }\n                    if (val.data &&\n                        val.data instanceof Blob &&\n                        typeof val.fileName === \"string\") {\n                        return [2 /*return*/, val];\n                    }\n                    if (typeof val === \"object\") {\n                        for (key in val) {\n                            if (val.hasOwnProperty(key)) {\n                                if (typeof val[key] === \"object\")\n                                    val[key] = JsonHelper.toJson(val[key]);\n                            }\n                        }\n                    }\n                    return [2 /*return*/, JsonHelper.toJson(val)];\n            }\n            return [2 /*return*/];\n        });\n    }); };\n    return ServiceHelper;\n}());\nexport default ServiceHelper;\n"]}