{"version":3,"sources":["DateHelper.js"],"names":["_IUtilityTypes","require","_NumberHelper","_interopRequireDefault","_ErrorHelper","DateHelper","_fixDate","d","check","getDate","setTime","parseISO8601","value","m","match","_isoDateFormatExp","_isoDateFormatExp2","Date","parseInt","_isoDateFormatExp3","_isoDateFormatExp5","num","date","setMonth","Number","offset","setDate","setHours","setSeconds","setMilliseconds","parse","_typeof","getTime","_dateFormatExp","setUTCHours","_dateFormatExp2","_dateFormatExp3","getFullYear","format","strMonth","strDay","strHours","strMinutes","strMilliseconds","year","month","getMonth","day","toString","length","getHours","getMinutes","getSeconds","replace","now","time","timeStr","gap","Math","ceil","diff","left","right","datepart","rightDate","leftDate","ErrorHelper","argumentNull","DatePartEnum","interval","week","hour","minute","unround","add","second","formatDate"],"mappings":"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","file":"DateHelper.js","sourcesContent":["import { DatePartEnum } from \"./IUtilityTypes\";\nimport NumberHelper from \"./NumberHelper\";\nimport ErrorHelper from \"./ErrorHelper\";\n/**\n * 日期帮助类\n */\nvar DateHelper = /** @class */ (function () {\n    function DateHelper() {\n    }\n    DateHelper._fixDate = function (d, check) {\n        if (+d) {\n            while (d.getDate() !== check.getDate()) {\n                d.setTime(+d + (d < check ? 1 : -1) * 3600000);\n            }\n        }\n    };\n    DateHelper.parseISO8601 = function (value) {\n        var m = value.match(DateHelper._isoDateFormatExp);\n        if (!m) {\n            m = value.match(DateHelper._isoDateFormatExp2);\n            if (m) {\n                return new Date(parseInt(m[1], 10), parseInt(m[2], 10) - 1, parseInt(m[3], 10), parseInt(m[4], 10));\n            }\n            m = value.match(DateHelper._isoDateFormatExp3);\n            if (m) {\n                return new Date(parseInt(m[1], 10), parseInt(m[2], 10) - 1);\n            }\n            m = value.match(DateHelper._isoDateFormatExp4);\n            if (m) {\n                return new Date(parseInt(m[1], 10), parseInt(m[2], 10) - 1, parseInt(m[3], 10));\n            }\n            m = value.match(DateHelper._isoDateFormatExp5);\n            if (!m)\n                return null;\n            else {\n                return new Date(parseInt(m[3], 10), parseInt(m[1], 10) - 1, parseInt(m[2], 10));\n            }\n        }\n        var num = parseInt(m[1], 10);\n        var date = new Date(num, 0, 1);\n        if (!m[14]) {\n            var check = new Date(num, 0, 1, 9, 0);\n            if (m[3]) {\n                num = parseInt(m[3], 10);\n                date.setMonth(num - 1);\n                check.setMonth(num - 1);\n            }\n            if (m[5]) {\n                num = parseInt(m[5], 10);\n                date.setDate(num);\n                check.setDate(num);\n            }\n            DateHelper._fixDate(date, check);\n            if (m[7]) {\n                date.setHours(parseInt(m[7], 10));\n            }\n            if (m[8]) {\n                date.setMinutes(parseInt(m[8], 10));\n            }\n            if (m[10]) {\n                date.setSeconds(parseInt(m[10], 10));\n            }\n            if (m[12]) {\n                date.setMilliseconds(Number(\"0.\" + m[12]) * 1000);\n            }\n            DateHelper._fixDate(date, check);\n        }\n        else {\n            num = parseInt(m[3], 10);\n            date.setUTCFullYear(parseInt(m[1], 10), num ? num - 1 : 0, parseInt(m[5], 10) || 1);\n            date.setUTCHours(parseInt(m[7], 10) || 0, parseInt(m[8], 10) || 0, parseInt(m[10], 10) || 0, parseInt(m[12], 10) ? Number(\"0.\" + m[12]) * 1000 : 0);\n            num = parseInt(m[18], 10);\n            var offset = parseInt(m[16], 10) * 60 + (num ? num : 0);\n            offset *= m[15] === \"-\" ? 1 : -1;\n            date = new Date(+date + offset * 60 * 1000);\n        }\n        return date;\n    };\n    /**\n     * 将一个日期字符串转换成一个日期对象\n     * @param value 受支持的日期字符串，格式为：yyyy-MM-dd HH:mm:ss\n     * @returns 一个日期对象\n     */\n    DateHelper.parse = function (value) {\n        if (!value) {\n            return null;\n        }\n        var d;\n        switch (typeof value) {\n            case \"number\":\n                d = new Date(Number(value) * 1000);\n                if (d.getTime() !== value) {\n                    return null;\n                }\n                return d;\n            case \"string\":\n                var m = value.match(DateHelper._dateFormatExp);\n                if (m) {\n                    var date = new Date(parseInt(m[1], 10), parseInt(m[2], 10) - 1, parseInt(m[3], 0));\n                    return date;\n                }\n                m = value.match(DateHelper._dateFormatExp2);\n                if (m) {\n                    var date = new Date(parseInt(m[1], 10), parseInt(m[2], 10) - 1);\n                    return date;\n                }\n                if (value.match(DateHelper._dateFormatExp3)) {\n                    var num = parseInt(value, 10);\n                    d = new Date(num * 1000);\n                    if (d.getTime() !== num) {\n                        return null;\n                    }\n                    return d;\n                }\n                return (DateHelper.parseISO8601(value) || (value ? new Date(value) : null));\n            default:\n                if (value.getFullYear) {\n                    return value;\n                }\n                return null;\n        }\n    };\n    /**\n     * 格式化日期对象\n     * @param date 日期对象\n     * @param format 格式\n     * @returns 返回格式化后的字符串\n     */\n    DateHelper.format = function (date, format) {\n        if (format === void 0) { format = \"yyyy-MM-dd\"; }\n        if (!date) {\n            return \"\";\n        }\n        switch (typeof date) {\n            case \"string\":\n                date = DateHelper.parse(date);\n                break;\n            case \"number\":\n                var newDate = new Date(Number(date) * 1000);\n                if (newDate.getTime() !== Number(date)) {\n                    return \"\";\n                }\n                break;\n            case \"object\":\n                if (!date.getFullYear) {\n                    return date.toString();\n                }\n                break;\n            default:\n                return date;\n        }\n        var year = date.getFullYear();\n        var month = date.getMonth();\n        var day = date.getDate();\n        var strMonth, strDay, strHours, strMinutes, strMilliseconds;\n        switch (format) {\n            case \"yyyy-MM-dd\":\n            case \"yyyy-mm-dd\":\n                strMonth = (month + 1).toString();\n                if (strMonth.length === 1) {\n                    strMonth = \"0\" + strMonth;\n                }\n                strDay = day.toString();\n                if (strDay.length === 1) {\n                    strDay = \"0\" + strDay;\n                }\n                return year + \"-\" + strMonth + \"-\" + strDay;\n            case \"MM-dd\":\n            case \"mm-dd\":\n                strMonth = (month + 1).toString();\n                if (strMonth.length === 1) {\n                    strMonth = \"0\" + strMonth;\n                }\n                strDay = day.toString();\n                if (strDay.length === 1) {\n                    strDay = \"0\" + strDay;\n                }\n                return strMonth + \"-\" + strDay;\n            case \"yyyy-MM-dd HH:mm\":\n            case \"yyyy-mm-dd hh:ii\":\n                strMonth = (month + 1).toString();\n                if (strMonth.length === 1) {\n                    strMonth = \"0\" + strMonth;\n                }\n                strDay = day.toString();\n                if (strDay.length === 1) {\n                    strDay = \"0\" + strDay;\n                }\n                strHours = date.getHours().toString();\n                if (strHours.length === 1) {\n                    strHours = \"0\" + strHours;\n                }\n                strMinutes = date.getMinutes().toString();\n                if (strMinutes.length === 1) {\n                    strMinutes = \"0\" + strMinutes;\n                }\n                return year + \"-\" + strMonth + \"-\" + strDay + \" \" + strHours + \":\" + strMinutes;\n            case \"yyyy-MM\":\n            case \"yyyy-mm\":\n                strMonth = (month + 1).toString();\n                if (strMonth.length === 1) {\n                    strMonth = \"0\" + strMonth;\n                }\n                return year + \"-\" + strMonth;\n            case \"yyyy\":\n                return year.toString();\n            case \"HH:mm:ss\":\n            case \"hh:ii:ss\":\n                strHours = date.getHours().toString();\n                if (strHours.length === 1) {\n                    strHours = \"0\" + strHours;\n                }\n                strMinutes = date.getMinutes().toString();\n                if (strMinutes.length === 1) {\n                    strMinutes = \"0\" + strMinutes;\n                }\n                strMilliseconds = date.getSeconds().toString();\n                if (strMilliseconds.length === 1) {\n                    strMilliseconds = \"0\" + strMilliseconds;\n                }\n                return strHours + \":\" + strMinutes + \":\" + strMilliseconds;\n            case \"MM-dd HH:mm:ss\":\n            case \"mm-dd hh:ii:ss\":\n                strMonth = (month + 1).toString();\n                if (strMonth.length === 1) {\n                    strMonth = \"0\" + strMonth;\n                }\n                strDay = day.toString();\n                if (strDay.length === 1) {\n                    strDay = \"0\" + strDay;\n                }\n                strHours = date.getHours().toString();\n                if (strHours.length === 1) {\n                    strHours = \"0\" + strHours;\n                }\n                strMinutes = date.getMinutes().toString();\n                if (strMinutes.length === 1) {\n                    strMinutes = \"0\" + strMinutes;\n                }\n                strMilliseconds = date.getSeconds().toString();\n                if (strMilliseconds.length === 1) {\n                    strMilliseconds = \"0\" + strMilliseconds;\n                }\n                return strMonth + \"-\" + strDay + \" \" + strHours + \":\" + strMinutes + \":\" + strMilliseconds;\n            case \"yyyy-MM-dd HH:mm:ss\":\n            case \"yyyy-mm-dd hh:ii:ss\":\n                strMonth = (month + 1).toString();\n                if (strMonth.length === 1) {\n                    strMonth = \"0\" + strMonth;\n                }\n                strDay = day.toString();\n                if (strDay.length === 1) {\n                    strDay = \"0\" + strDay;\n                }\n                strHours = date.getHours().toString();\n                if (strHours.length === 1) {\n                    strHours = \"0\" + strHours;\n                }\n                strMinutes = date.getMinutes().toString();\n                if (strMinutes.length === 1) {\n                    strMinutes = \"0\" + strMinutes;\n                }\n                strMilliseconds = date.getSeconds().toString();\n                if (strMilliseconds.length === 1) {\n                    strMilliseconds = \"0\" + strMilliseconds;\n                }\n                return (year +\n                    \"-\" +\n                    strMonth +\n                    \"-\" +\n                    strDay +\n                    \" \" +\n                    strHours +\n                    \":\" +\n                    strMinutes +\n                    \":\" +\n                    strMilliseconds);\n            case \"yyyy/MM/dd HH:mm:ss\":\n            case \"yyyy/mm/dd hh:ii:ss\":\n                strMonth = (month + 1).toString();\n                if (strMonth.length === 1) {\n                    strMonth = \"0\" + strMonth;\n                }\n                strDay = day.toString();\n                if (strDay.length === 1) {\n                    strDay = \"0\" + strDay;\n                }\n                strHours = date.getHours().toString();\n                if (strHours.length === 1) {\n                    strHours = \"0\" + strHours;\n                }\n                strMinutes = date.getMinutes().toString();\n                if (strMinutes.length === 1) {\n                    strMinutes = \"0\" + strMinutes;\n                }\n                strMilliseconds = date.getSeconds().toString();\n                if (strMilliseconds.length === 1) {\n                    strMilliseconds = \"0\" + strMilliseconds;\n                }\n                return (year +\n                    \"/\" +\n                    strMonth +\n                    \"/\" +\n                    strDay +\n                    \" \" +\n                    strHours +\n                    \":\" +\n                    strMinutes +\n                    \":\" +\n                    strMilliseconds);\n            case \"MM/dd HH:mm\":\n            case \"mm/dd hh:ii\":\n                strMonth = (month + 1).toString();\n                if (strMonth.length === 1) {\n                    strMonth = \"0\" + strMonth;\n                }\n                strDay = day.toString();\n                if (strDay.length === 1) {\n                    strDay = \"0\" + strDay;\n                }\n                strHours = date.getHours().toString();\n                if (strHours.length === 1) {\n                    strHours = \"0\" + strHours;\n                }\n                strMinutes = date.getMinutes().toString();\n                if (strMinutes.length === 1) {\n                    strMinutes = \"0\" + strMinutes;\n                }\n                strMilliseconds = date.getSeconds().toString();\n                if (strMilliseconds.length === 1) {\n                    strMilliseconds = \"0\" + strMilliseconds;\n                }\n                return strMonth + \"/\" + strDay + \" \" + strHours + \":\" + strMinutes;\n        }\n        return \"\";\n    };\n    /**\n     * 格式化日期对象，判断是否是今年，返回对应字符串\n     */\n    DateHelper.formatDate = function (value) {\n        if (!value)\n            return value;\n        value = value.toString();\n        value = value.replace(/-/g, \"/\");\n        var now = new Date();\n        var time = new Date(value);\n        var timeStr = DateHelper.format(time, \"MM-dd\");\n        if (time.getFullYear() !== now.getFullYear()) {\n            timeStr = DateHelper.format(time, \"yyyy-MM-dd\");\n        }\n        return timeStr;\n    };\n    DateHelper.formatDateTime = function (value) {\n        if (!value)\n            return value;\n        value = value.toString();\n        value = value.replace(/-/g, \"/\");\n        var now = new Date();\n        var time = new Date(value);\n        var gap = Number(now) - Number(time);\n        var timeStr = \"刚刚\";\n        if (gap < 60 * 1000) {\n            timeStr = \"刚刚\";\n        }\n        else if (60 * 1000 <= gap && gap < 60 * 60 * 1000) {\n            timeStr = Math.ceil(gap / (60 * 1000)) + \"分钟前\";\n        }\n        else if (60 * 60 * 1000 <= gap && gap < 24 * 60 * 60 * 1000) {\n            timeStr = Math.ceil(gap / (60 * 60 * 1000)) + \"小时前\";\n        }\n        else if (time.getFullYear() < now.getFullYear()) {\n            timeStr = DateHelper.format(time, \"yyyy-MM-dd HH:mm:ss\");\n        }\n        else if (time.getDate() === now.getDate() && time.getMonth() === now.getMonth()) {\n            timeStr = DateHelper.format(time, \"HH:mm:ss\");\n        }\n        else {\n            timeStr = DateHelper.format(time, \"MM-dd HH:mm:ss\");\n        }\n        return timeStr;\n    };\n    /**\n     * 计算两个日期之间的间隔\n     * @param left 左值\n     * @param right 右值\n     * @param datepart 计算类型\n     * @returns 返回间隔数\n     */\n    DateHelper.diff = function (left, right, datepart) {\n        var leftDate = DateHelper.parse(left), rightDate = DateHelper.parse(right);\n        if (!leftDate) {\n            throw ErrorHelper.argumentNull(\"left\", \"参数值必须是一个日期对象或者是一个可以转换成日期对象的数值或字符串。\");\n        }\n        if (!rightDate) {\n            throw ErrorHelper.argumentNull(\"right\", \"参数值必须是一个日期对象或者是一个可以转换成日期对象的数值或字符串。\");\n        }\n        switch (datepart) {\n            case DatePartEnum.year:\n                return rightDate.getFullYear() - leftDate.getFullYear();\n            case DatePartEnum.month:\n                return ((rightDate.getFullYear() - leftDate.getFullYear()) * 12 +\n                    rightDate.getMonth() -\n                    leftDate.getMonth());\n            default: {\n                var interval = (rightDate.getTime() - leftDate.getTime()) / 1000; // 相差秒\n                switch (datepart) {\n                    case DatePartEnum.week:\n                        interval = interval / 60 / 60 / 24 / 7;\n                        break;\n                    case DatePartEnum.day:\n                        interval = interval / 60 / 60 / 24;\n                        break;\n                    case DatePartEnum.hour:\n                        interval = interval / 60 / 60;\n                        break;\n                    case DatePartEnum.minute:\n                        interval = interval / 60;\n                        break;\n                }\n                return NumberHelper.unround(interval);\n            }\n        }\n    };\n    /**\n     * 在日期中添加或减去指定的时间间隔\n     * @param date 要进行处理的日期对象或可以转换成日期的字符串\n     * @param datepart 计算类型\n     * @param interval 间隔\n     * @returns 返回日期对象\n     */\n    DateHelper.add = function (value, datepart, interval) {\n        var date = DateHelper.parse(value);\n        if (!date) {\n            throw ErrorHelper.argumentNull(\"left\", \"参数值必须是一个日期对象或者是一个可以转换成日期对象的数值或字符串。\");\n        }\n        switch (datepart) {\n            case DatePartEnum.year:\n                return new Date(date.getFullYear() + interval, date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());\n            case DatePartEnum.month:\n                return new Date(date.getFullYear(), date.getMonth() + interval, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());\n            case DatePartEnum.day:\n                return new Date(date.getTime() + 86400000 * interval);\n            case DatePartEnum.week:\n                return new Date(date.getTime() + 604800000 * interval);\n            case DatePartEnum.hour:\n                return new Date(date.getTime() + 3600000 * interval);\n            case DatePartEnum.minute:\n                return new Date(date.getTime() + 60000 * interval);\n            case DatePartEnum.second:\n                return new Date(date.getTime() + 1000 * interval);\n        }\n        return null;\n    };\n    DateHelper._dateFormatExp = /^([0-9]{4})([0-9]{2})([0-9]{2})$/;\n    DateHelper._dateFormatExp2 = /^([0-9]{4}).([0-9]*)$/;\n    DateHelper._dateFormatExp3 = /^\\d+(\\.\\d+)?$/;\n    DateHelper._isoDateFormatExp = /^([0-9]{4})([-\\/]([0-9]{1,2})([-\\/]([0-9]{1,2})([T ]([0-9]{1,2}):([0-9]{1,2})(:([0-9]{1,2})(\\.([0-9]+))?)?(Z|(([-+])([0-9]{2})(:?([0-9]{2}))?))?)?)?)?$/;\n    DateHelper._isoDateFormatExp2 = /^([0-9]{4})[-\\/]([0-9]{2})[-\\/]([0-9]{2})[T ]([0-9]{1,2})/;\n    DateHelper._isoDateFormatExp3 = /^([0-9]{4}).([0-9]*)/;\n    DateHelper._isoDateFormatExp4 = /^([0-9]{4}).([0-9]*).([0-9]*)/;\n    DateHelper._isoDateFormatExp5 = /^([0-9]{2})-([0-9]{2})-([0-9]{4})$/;\n    return DateHelper;\n}());\nexport default DateHelper;\n"]}