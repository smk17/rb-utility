{"version":3,"sources":["ErrorHelper.js"],"names":["_ConsoleHelper","_interopRequireDefault","require","_StringBuilder","_StringHelper","_Environment","_JsonHelper","_Localize","_IUtilityTypes","ErrorHelper","e","sb","appendLine","name","message","stack","JsonHelper","toJson","append","__printExceptionTo","StringBuilder","toString","kind","Localize","paramName","create","innerException","data","err","Error","_errorArgument","actualValue","displayMessage","StringHelper","format","_error","ex","constructor","dispose","passException","type","datas","referencedDatas","length","ConsoleHelper","error","join","log","window","location","href","Environment","__processError","writeLog","LoggerLevelEnum"],"mappings":"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","file":"ErrorHelper.js","sourcesContent":["import ConsoleHelper from \"./ConsoleHelper\";\nimport StringBuilder from \"./StringBuilder\";\nimport StringHelper from \"./StringHelper\";\nimport Environment from \"./Environment\";\nimport JsonHelper from \"./JsonHelper\";\nimport Localize from \"./Localize\";\nimport { LoggerLevelEnum } from \"./IUtilityTypes\";\n/**\n * 异常错误对象\n */\nexport default class ErrorHelper {\n    /**\n     * 打印异常信息\n     * @param e 服务端异常对象\n     * @param sb\n     */\n    static __printExceptionTo(e, sb) {\n        sb.appendLine(\"异常类型：\", e.name).appendLine(\"异常消息：\", e.message);\n        if (e.stack) {\n            sb.appendLine(\"堆栈信息：\").appendLine(e.stack);\n        }\n        if (e[\"data\"]) {\n            sb.appendLine(\"异常数据：\").appendLine(JsonHelper.toJson(e[\"data\"]));\n        }\n        if (e[\"innerException\"]) {\n            sb.append(\"内部异常：\");\n            ErrorHelper.__printExceptionTo(e[\"innerException\"], sb);\n        }\n    }\n    /**\n     * 打印异常信息\n     * @param e 服务端异常对象\n     */\n    static __printException(e) {\n        if (e.name === \"BusinessException\") {\n            return e.message;\n        }\n        let sb = new StringBuilder();\n        ErrorHelper.__printExceptionTo(e, sb);\n        return sb.toString();\n    }\n    /**\n     * 创建参数异常对象\n     * @param kind 参数异常类型\n     * @param paramName 参数名称\n     * @param message 异常消息\n     * @returns 返回Error对象\n     */\n    static _errorArgument(kind, paramName, message) {\n        let name = \"Argument\" + kind + \"Exception\";\n        if (paramName) {\n            message += \"\\n\" + Localize.to(\"参数名：{0}。\", paramName);\n        }\n        return ErrorHelper.create(name, message, \"\", null, { paramName });\n    }\n    /**\n     * 创建异常对象\n     * @param kind 异常类型\n     * @param message 异常消息\n     * @returns 返回Error对象\n     */\n    static _error(kind, message) {\n        return ErrorHelper.create(kind + \"Exception\", message, \"\");\n    }\n    /**\n     * 创建一个Error对象\n     * @param name 异常名称\n     * @param message 错误消息\n     * @param stack 堆栈信息\n     * @param innerException 内部错误对象\n     * @param data 错误的具体信息.默认为null\n     * @returns 返回Error对象\n     */\n    static create(name, message, stack, innerException, data) {\n        let err = new Error();\n        err.name = name;\n        err.message = message;\n        if (stack) {\n            err.stack = stack;\n        }\n        if (innerException) {\n            err[\"innerException\"] = innerException;\n        }\n        if (data) {\n            err[\"data\"] = data;\n        }\n        return err;\n    }\n    /**\n     * 创建一个参数错误异常\n     * @param paramName 参数名称\n     * @param message 异常消息\n     * @returns 返回一个ArgumentException异常对象\n     */\n    static argument(paramName, message) {\n        return ErrorHelper._errorArgument(\"\", paramName, message || \"值并不在预期的范围内。\");\n    }\n    /**\n     * 创建一个空值参数异常对象\n     * @param paramName 参数名称\n     * @param message 异常消息\n     * @returns 返回一个ArgumentNullException异常对象\n     */\n    static argumentNull(paramName, message) {\n        return ErrorHelper._errorArgument(\"Null\", paramName, message || \"值不能为null。\");\n    }\n    /**\n     * 创建一个参数值超出运行范围的异常对象\n     * @param paramName 参数名称\n     * @param actualValue 该参数的实际值.默认为null\n     * @param message 异常具体消息\n     * @returns 返回一个ArgumentOutOfRangeException异常对\n     */\n    static argumentOutOfRange(paramName, actualValue, message) {\n        let displayMessage = message || \"值在有效范围之外。\";\n        if (paramName) {\n            displayMessage += \"\\n\" + StringHelper.format(\"参数名：{0}。\", paramName);\n        }\n        if (typeof actualValue !== \"undefined\" && actualValue !== null) {\n            displayMessage += \"\\n\" + StringHelper.format(\"实际值是：{0}。\", actualValue);\n        }\n        return ErrorHelper.create(\"ArgumentOutOfRangeException\", displayMessage, \"\", null, {\n            paramName,\n            actualValue\n        });\n    }\n    /**\n     * 创建一个参数未定义的异常\n     * @param paramName 参数名称\n     * @param message 错误的消息\n     * @returns 返回一个ArgumentUndefinedException异常对象\n     */\n    static argumentUndefined(paramName, message) {\n        return ErrorHelper._errorArgument(\"Undefined\", paramName, message || \"值不能为未定义。\");\n    }\n    /**\n     * 创建一个格式错误的异常\n     * @param message 错误的消息\n     * @returns 返回一个FormatException异常对象\n     */\n    static format(message) {\n        return ErrorHelper._error(\"Format\", message || \"一个无效的格式。\");\n    }\n    /**\n     * 创建无效操作异常\n     * @param message 错误的消息\n     * @returns 返回一个InvalidOperationException异常对象\n     */\n    static invalidOperation(message) {\n        return ErrorHelper._error(\"InvalidOperation\", message || \"一个无效的操作。\");\n    }\n    /**\n     * 创建一个没有实现的异常\n     * @param message 错误的消息\n     * @returns 返回一个NotImplementedException异常对象\n     */\n    static notImplemented(message) {\n        return ErrorHelper._error(\"NotImplemented\", message || \"当前方法或操作没有实现。\");\n    }\n    /**\n     * 创建一个没有实现的异常\n     * @param message 错误的消息\n     * @returns 返回一个NotImplementedException异常对象\n     */\n    static notSupported(message) {\n        return ErrorHelper._error(\"NotSupported\", message || \"不支持当前操作。\");\n    }\n    /**\n     * 创建一个参数个数异常\n     * @param message 错误的消息\n     * @returns 返回一个ParameterCountException异常对象\n     */\n    static parameterCount(message) {\n        return ErrorHelper._error(\"ParameterCount\", message || \"参数个数不匹配。\");\n    }\n    /**\n     * 创建一个配置异常\n     * @param message 错误的消息\n     * @returns 返回一个ConfigException异常对象\n     */\n    static configException(message) {\n        return ErrorHelper._error(\"Config\", message || \"配置异常。\");\n    }\n    /**\n     * 创建一个配置异常\n     * @returns 返回一个SystemException异常对象\n     */\n    static systemException(message) {\n        return ErrorHelper._error(\"System\", message || \"操作失败，请联系系统管理员！\");\n    }\n    /**\n     * 创建一个用户提示异常\n     * @returns 返回一个UserException异常对象\n     */\n    static userException(message) {\n        return ErrorHelper._error(\"User\", message);\n    }\n    /**\n     * 创建一个忽略后续操作异常\n     * @returns 返回一个PassException异常对象\n     */\n    static passException() {\n        return ErrorHelper._error(\"Pass\", \"用于终止后面的操作。\");\n    }\n    /**\n     * 判断一个异常对象是否为一个pass异常\n     * @param ex 需要判断的异常\n     */\n    static isPassException(ex) {\n        return ex && ex.constructor === Error && ex.name === \"PassException\";\n    }\n    /**\n     * 捕获所有的异常,并抛出pass异常\n     * @param ex 需要捕获的异常\n     */\n    static disposeThrowPass(ex) {\n        if (ex.name === \"PassException\") {\n            throw ex;\n        }\n        ErrorHelper.dispose(ex);\n        throw ErrorHelper.passException();\n    }\n    /**\n     * 异常处理.如果是\"UserException\"异常,则会直接弹出异常信息;否则会写入异常日志,并弹出\"操作失败，请关闭重试！\"\n     * @param ex 异常对象\n     */\n    static dispose(ex) {\n        if (!ex) {\n            return;\n        }\n        switch (ex.name) {\n            case \"PassException\":\n                return;\n            case \"BusinessException\":\n            case \"UserException\":\n                switch (ex.type) {\n                    case \"ReferencedDataException\":\n                        {\n                            let datas = ex.referencedDatas;\n                            if (datas.length > 5) {\n                                datas[5] = \"等\";\n                            }\n                            ConsoleHelper.error(ex.message + \"-被使用的数据：\" + datas.join(\"，\"));\n                        }\n                        break;\n                    default:\n                        // UI.Dialogs.warn(ex.message);\n                        ConsoleHelper.log(ex.message);\n                        break;\n                }\n                break;\n            case \"ClientDisposeException\":\n                // UI.Dialogs.warn(ex.message);\n                ConsoleHelper.log(ex.message);\n                if (ex[\"logout\"]) {\n                    window.location.href = \"index.html\";\n                }\n                break;\n            case \"SystemException\":\n            case \"AuthorizationException\":\n            case \"OpenDBConnectionException\":\n                // UI.Dialogs.error(ex.message);\n                ConsoleHelper.error(ex.message);\n                break;\n            case \"Exception\":\n                Environment.__processError(ex);\n                break;\n            default:\n                Environment.writeLog(LoggerLevelEnum.Error, ex);\n                Environment.__processError(ex);\n                break;\n        }\n    }\n}\n"]}