{"version":3,"sources":["ObjectHelper.js"],"names":["_TypeHelper","_interopRequireDefault","require","ObjectHelper","x","y","Object","constructor","p","hasOwnProperty","_typeof","equals","i","obj","length","result","push","callback"],"mappings":"2FAAA,IAAAA,YAAAC,uBAAAC,QAAA,otBAEqBC,sHAEHC,EAAGC,GACb,GAAID,IAAMC,EACN,OAAO,EAEX,KAAMD,aAAaE,QAAaD,aAAaC,QACzC,OAAO,EAEX,GAAIF,EAAEG,cAAgBF,EAAEE,YACpB,OAAO,EAGX,IAAK,IAAMC,KAAKJ,EACZ,GAAKA,EAAEK,eAAeD,GAAtB,CAfZ,IAAAH,EAAAI,eAAAD,GAmBgB,OAAO,EAEX,GAAIJ,EAAEI,KAAOH,EAAEG,GAAf,CAGA,GAAoB,WAAhBE,QAAON,EAAEI,IACT,OAAO,EAEX,IAAKL,EAAaQ,OAAOP,EAAEI,GAAIH,EAAEG,IAC7B,OAAO,GAxBf,IAAK,IACDA,KAAAH,EA2BA,GAAIA,EAAEI,eAAeD,KAAOJ,EAAEK,eAAeD,GAzB1C,OAAA,EAMP,OAAA,8BACWA,EAAKJ,GACZ,IAAIQ,EAAGH,EAAAA,GAyBX,GAAII,EAtBI,GAAGJ,YAAAA,QAAAA,QACHI,GAuBA,IAAKD,EAAI,EAAGA,EAAIC,EAAIC,OAAQF,IArB5BG,EACAC,KAAAC,EACJJ,EAAAD,GAAAA,SAIKT,IAAAA,KAAaQ,EAGrBE,EAAAJ,eAAAG,IAmBeG,EAAOC,KAAKC,EAASJ,EAAID,GAAIA,IAb7C,OAAOG","file":"ObjectHelper.js","sourcesContent":["import TypeHelper from \"./TypeHelper\";\n/** 对象类型辅助工具 */\nexport default class ObjectHelper {\n    /** 对象深比较 */\n    static equals(x, y) {\n        if (x === y)\n            return true;\n        // if both x and y are null or undefined and exactly the same\n        if (!(x instanceof Object) || !(y instanceof Object))\n            return false;\n        // if they are not strictly equal, they both need to be Objects\n        if (x.constructor !== y.constructor)\n            return false;\n        // they must have the exact same prototype chain, the closest we can do is\n        // test there constructor.\n        for (const p in x) {\n            if (!x.hasOwnProperty(p))\n                continue;\n            // other properties were tested using x.constructor === y.constructor\n            if (!y.hasOwnProperty(p))\n                return false;\n            // allows to compare x[ p ] and y[ p ] when set to undefined\n            if (x[p] === y[p])\n                continue;\n            // if they have the same strict value or identity then they are equal\n            if (typeof x[p] !== \"object\")\n                return false;\n            // Numbers, Strings, Functions, Booleans must be strictly equal\n            if (!ObjectHelper.equals(x[p], y[p]))\n                return false;\n            // Objects and Arrays must be tested recursively\n        }\n        for (const p in y) {\n            if (y.hasOwnProperty(p) && !x.hasOwnProperty(p))\n                return false;\n            // allows x[ p ] to be set to undefined\n        }\n        return true;\n    }\n    static map(obj, callback) {\n        let i, result = [];\n        if (obj) {\n            if (TypeHelper.isArray(obj)) {\n                for (i = 0; i < obj.length; i++) {\n                    result.push(callback(obj[i], i));\n                }\n            }\n            else {\n                for (i in obj) {\n                    if (obj.hasOwnProperty(i)) {\n                        result.push(callback(obj[i], i));\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\n"]}