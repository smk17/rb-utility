{"version":3,"sources":["ObjectHelper.js"],"names":["_TypeHelper","_interopRequireDefault","require","ObjectHelper","equals","x","y","Object","constructor","hasOwnProperty","p","_typeof","map","obj","callback","TypeHelper","isArray","i","length","result","push"],"mappings":"2FAAA,IAAAA,YAAAC,uBAAAC,QAAA,0UAEA,IAAIC,aAA8B,WAC9B,SAASA,KAgDO,OA7ChBA,EAAaC,OAAS,SAAUC,EAAGC,GANvC,GAAAD,IAAAC,EAQY,OAAO,EAEX,KAAMD,aAAaE,QAAaD,aAAaC,QACzC,OAAO,EAVnB,GAAAF,EAAAG,cAAAF,EAAAE,YACIL,OAAY,EACZ,IAASA,IAAAA,KAAAA,EAET,GAAAE,EAAAI,eAAAC,GAAA,CACAP,IAAaC,EAAAA,eAAmBC,GAC5B,OACI,EAEG,GAAAA,EAAAK,KAAYH,EAAAA,GAAZ,CAMP,GAAA,WAAAI,QAAAN,EAAAK,IAYQ,OAAO,EAVL,IAACD,EAAPL,OACIC,EAAAK,GACJJ,EAAAI,IAWI,OAAO,GAPX,IAAK,IAADA,KAAUJ,EAWd,GAAIA,EAAEG,eAAeC,KAAOL,EAAEI,eAAeC,GARzC,OAAA,EAMP,OAAA,GACDP,EAAAS,IAAiB,SAAAC,EAAAC,GACb,IAAML,EAAAA,EAAAA,GAGT,GAAAI,EAMG,GAAIE,YAAAA,QAAWC,QAAQH,GAL3B,IAAAI,EAAA,EAAAA,EAAAJ,EAAAK,OAAAD,IAjCJE,EAAAC,KAAAN,EAAAD,EAAAI,GAAAA,SAoCiB,IAAbA,KAAAJ,EASgBA,EAAIJ,eAAeQ,IAR1BE,EAAAC,KAAAN,EAAAD,EAAAI,GAAAA,IACL,OAKKE,GAEGhB,EAjDc,YAmDbA","file":"ObjectHelper.js","sourcesContent":["import TypeHelper from \"./TypeHelper\";\n/** 对象类型辅助工具 */\nvar ObjectHelper = /** @class */ (function () {\n    function ObjectHelper() {\n    }\n    /** 对象深比较 */\n    ObjectHelper.equals = function (x, y) {\n        if (x === y)\n            return true;\n        // if both x and y are null or undefined and exactly the same\n        if (!(x instanceof Object) || !(y instanceof Object))\n            return false;\n        // if they are not strictly equal, they both need to be Objects\n        if (x.constructor !== y.constructor)\n            return false;\n        // they must have the exact same prototype chain, the closest we can do is\n        // test there constructor.\n        for (var p in x) {\n            if (!x.hasOwnProperty(p))\n                continue;\n            // other properties were tested using x.constructor === y.constructor\n            if (!y.hasOwnProperty(p))\n                return false;\n            // allows to compare x[ p ] and y[ p ] when set to undefined\n            if (x[p] === y[p])\n                continue;\n            // if they have the same strict value or identity then they are equal\n            if (typeof x[p] !== \"object\")\n                return false;\n            // Numbers, Strings, Functions, Booleans must be strictly equal\n            if (!ObjectHelper.equals(x[p], y[p]))\n                return false;\n            // Objects and Arrays must be tested recursively\n        }\n        for (var p in y) {\n            if (y.hasOwnProperty(p) && !x.hasOwnProperty(p))\n                return false;\n            // allows x[ p ] to be set to undefined\n        }\n        return true;\n    };\n    ObjectHelper.map = function (obj, callback) {\n        var i, result = [];\n        if (obj) {\n            if (TypeHelper.isArray(obj)) {\n                for (i = 0; i < obj.length; i++) {\n                    result.push(callback(obj[i], i));\n                }\n            }\n            else {\n                for (i in obj) {\n                    if (obj.hasOwnProperty(i)) {\n                        result.push(callback(obj[i], i));\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    return ObjectHelper;\n}());\nexport default ObjectHelper;\n"]}